{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\OneDrive\\\\Desktop\\\\Exam\\\\Frontend\\\\src\\\\Patch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateStudent() {\n  _s();\n  const [studentId, setStudentId] = useState('');\n  const [name, setName] = useState('');\n  const [rollNo, setRollNo] = useState('');\n  const [subject, setSubject] = useState('');\n  const [marks, setMarks] = useState('');\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const student = {\n      name,\n      rollNo,\n      subject,\n      marks\n    };\n    try {\n      const response = await fetch(`/students/${studentId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(student)\n      });\n      if (response.ok) {\n        console.log('Student updated successfully');\n        // Reset form fields after successful submission\n        setStudentId('');\n        setName('');\n        setRollNo('');\n        setSubject('');\n        setMarks('');\n      } else {\n        console.error('Failed to update student');\n      }\n    } catch (error) {\n      console.error('Error updating student', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Student ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: studentId,\n          onChange: e => setStudentId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Roll No:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: rollNo,\n          onChange: e => setRollNo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Subject:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: subject,\n          onChange: e => setSubject(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Marks:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: marks,\n          onChange: e => setMarks(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateStudent, \"PedojQRlj7LEwnPCdid7NOUSCQI=\");\n_c = UpdateStudent;\nexport default UpdateStudent;\nvar _c;\n$RefreshReg$(_c, \"UpdateStudent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UpdateStudent","_s","studentId","setStudentId","name","setName","rollNo","setRollNo","subject","setSubject","marks","setMarks","handleSubmit","event","preventDefault","student","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/aksha/OneDrive/Desktop/Exam/Frontend/src/Patch.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction UpdateStudent() {\r\n    const [studentId, setStudentId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [rollNo, setRollNo] = useState('');\r\n    const [subject, setSubject] = useState('');\r\n    const [marks, setMarks] = useState('');\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const student = {\r\n            name,\r\n            rollNo,\r\n            subject,\r\n            marks\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`/students/${studentId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(student)\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Student updated successfully');\r\n                // Reset form fields after successful submission\r\n                setStudentId('');\r\n                setName('');\r\n                setRollNo('');\r\n                setSubject('');\r\n                setMarks('');\r\n            } else {\r\n                console.error('Failed to update student');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating student', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Update Student</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Student ID:\r\n                    <input type=\"text\" value={studentId} onChange={(e) => setStudentId(e.target.value)} />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Name:\r\n                    <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Roll No:\r\n                    <input type=\"text\" value={rollNo} onChange={(e) => setRollNo(e.target.value)} />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Subject:\r\n                    <input type=\"text\" value={subject} onChange={(e) => setSubject(e.target.value)} />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Marks:\r\n                    <input type=\"text\" value={marks} onChange={(e) => setMarks(e.target.value)} />\r\n                </label>\r\n                <br />\r\n                <button type=\"submit\">Update Student</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateStudent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}